{
 "Description": "Stack for Bedrock Agent with Nova Pro model - Development",
 "Resources": {
  "BedrockAgentBucket21B034A2": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "AES256"
       }
      }
     ]
    },
    "BucketName": "bedrock-agent-dev-291412412747-ap-southeast-1",
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     }
    ],
    "VersioningConfiguration": {
     "Status": "Enabled"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "BedrockAgentStack-Dev/BedrockAgentBucket/Resource"
   }
  },
  "BedrockAgentBucketPolicy93F38433": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "BedrockAgentBucket21B034A2"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:PutBucketPolicy"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "BedrockAgentBucket21B034A2",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "BedrockAgentBucket21B034A2",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BedrockAgentStack-Dev/BedrockAgentBucket/Policy/Resource"
   }
  },
  "BedrockAgentBucketAutoDeleteObjectsCustomResource91764E81": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "BedrockAgentBucket21B034A2"
    }
   },
   "DependsOn": [
    "BedrockAgentBucketPolicy93F38433"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "BedrockAgentStack-Dev/BedrockAgentBucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BedrockAgentStack-Dev/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-291412412747-ap-southeast-1",
     "S3Key": "faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "BedrockAgentBucket21B034A2"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ],
   "Metadata": {
    "aws:cdk:path": "BedrockAgentStack-Dev/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
    "aws:asset:path": "asset.faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6",
    "aws:asset:property": "Code"
   }
  },
  "BedrockAgentRole7C982E0C": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "bedrock.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Role for Bedrock Agent to access Nova Pro and other services",
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonBedrockFullAccess"
       ]
      ]
     }
    ],
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "bedrock:GetFoundationModel",
          "bedrock:InvokeModel",
          "bedrock:InvokeModelWithResponseStream",
          "bedrock:ListFoundationModels"
         ],
         "Effect": "Allow",
         "Resource": [
          "arn:aws:bedrock:ap-southeast-1:291412412747:agent-alias/*",
          "arn:aws:bedrock:ap-southeast-1:291412412747:agent/*",
          "arn:aws:bedrock:ap-southeast-1:291412412747:inference-profile/apac.amazon.nova-pro-v1:0",
          "arn:aws:bedrock:ap-southeast-1:291412412747:knowledge-base/*",
          "arn:aws:bedrock:ap-southeast-1::foundation-model/amazon.nova-pro-v1:0"
         ]
        },
        {
         "Action": [
          "s3:DeleteObject",
          "s3:GetObject",
          "s3:ListBucket",
          "s3:PutObject"
         ],
         "Effect": "Allow",
         "Resource": [
          {
           "Fn::GetAtt": [
            "BedrockAgentBucket21B034A2",
            "Arn"
           ]
          },
          {
           "Fn::Join": [
            "",
            [
             {
              "Fn::GetAtt": [
               "BedrockAgentBucket21B034A2",
               "Arn"
              ]
             },
             "/*"
            ]
           ]
          }
         ]
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "BedrockAgentPolicy"
     }
    ],
    "RoleName": "BedrockAgentStack-Dev-BedrockAgentRole"
   },
   "Metadata": {
    "aws:cdk:path": "BedrockAgentStack-Dev/BedrockAgentRole/Resource"
   }
  },
  "AgentActionFunctionServiceRole003A432A": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BedrockAgentStack-Dev/AgentActionFunction/ServiceRole/Resource"
   }
  },
  "AgentActionFunction45C8B7D6": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "\nimport json\nimport boto3\nfrom datetime import datetime\n\ndef handler(event, context):\n    \"\"\"\n    Lambda function to handle Bedrock Agent actions\n    \"\"\"\n    print(f\"Received event: {json.dumps(event)}\")\n    \n    # Extract action and parameters from the event\n    action = event.get('actionGroup', '')\n    parameters = event.get('parameters', {})\n    \n    # Example action handlers\n    if action == 'get_current_time':\n        current_time = datetime.now().isoformat()\n        return {\n            'statusCode': 200,\n            'body': {\n                'TEXT': {\n                    'body': f\"The current time is: {current_time}\"\n                }\n            }\n        }\n    elif action == 'calculate':\n        # Example calculation action\n        try:\n            num1 = float(parameters.get('number1', 0))\n            num2 = float(parameters.get('number2', 0))\n            operation = parameters.get('operation', 'add')\n            \n            if operation == 'add':\n                result = num1 + num2\n            elif operation == 'subtract':\n                result = num1 - num2\n            elif operation == 'multiply':\n                result = num1 * num2\n            elif operation == 'divide':\n                result = num1 / num2 if num2 != 0 else 'Cannot divide by zero'\n            else:\n                result = 'Invalid operation'\n                \n            return {\n                'statusCode': 200,\n                'body': {\n                    'TEXT': {\n                        'body': f\"Result: {result}\"\n                    }\n                }\n            }\n        except Exception as e:\n            return {\n                'statusCode': 400,\n                'body': {\n                    'TEXT': {\n                        'body': f\"Error in calculation: {str(e)}\"\n                    }\n                }\n            }\n    else:\n        return {\n            'statusCode': 400,\n            'body': {\n                'TEXT': {\n                    'body': f\"Unknown action: {action}\"\n                }\n            }\n        }\n      "
    },
    "Description": "Lambda function for Bedrock Agent custom actions",
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "AgentActionFunctionServiceRole003A432A",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 300
   },
   "DependsOn": [
    "AgentActionFunctionServiceRole003A432A"
   ],
   "Metadata": {
    "aws:cdk:path": "BedrockAgentStack-Dev/AgentActionFunction/Resource"
   }
  },
  "AgentActionFunctionInvokeu1TDdDMoLpes23omAp0kUXOcNSkFsO0n9KPkoXL6817FFA2AB": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AgentActionFunction45C8B7D6",
      "Arn"
     ]
    },
    "Principal": "bedrock.amazonaws.com"
   },
   "Metadata": {
    "aws:cdk:path": "BedrockAgentStack-Dev/AgentActionFunction/Invokeu1TDdDMoLpes23omAp0kUXOcNSk--FsO0n9K--PkoXL68="
   }
  },
  "BedrockAgent": {
   "Type": "AWS::Bedrock::Agent",
   "Properties": {
    "ActionGroups": [
     {
      "ActionGroupExecutor": {
       "Lambda": {
        "Fn::GetAtt": [
         "AgentActionFunction45C8B7D6",
         "Arn"
        ]
       }
      },
      "ActionGroupName": "utility-actions",
      "ApiSchema": {
       "Payload": "{\"openapi\":\"3.0.0\",\"info\":{\"title\":\"Agent Utility API\",\"version\":\"1.0.0\",\"description\":\"API for agent utility functions\"},\"paths\":{\"/get_current_time\":{\"post\":{\"summary\":\"Get current time\",\"description\":\"Returns the current date and time\",\"operationId\":\"get_current_time\",\"responses\":{\"200\":{\"description\":\"Current time retrieved successfully\"}}}},\"/calculate\":{\"post\":{\"summary\":\"Perform calculations\",\"description\":\"Performs mathematical calculations\",\"operationId\":\"calculate\",\"requestBody\":{\"content\":{\"application/json\":{\"schema\":{\"type\":\"object\",\"properties\":{\"number1\":{\"type\":\"number\",\"description\":\"First number\"},\"number2\":{\"type\":\"number\",\"description\":\"Second number\"},\"operation\":{\"type\":\"string\",\"enum\":[\"add\",\"subtract\",\"multiply\",\"divide\"],\"description\":\"Mathematical operation to perform\"}},\"required\":[\"number1\",\"number2\",\"operation\"]}}}},\"responses\":{\"200\":{\"description\":\"Calculation completed successfully\"}}}}}}"
      },
      "Description": "Utility functions for the agent"
     }
    ],
    "AgentName": "nova-pro-agent-dev",
    "AgentResourceRoleArn": {
     "Fn::GetAtt": [
      "BedrockAgentRole7C982E0C",
      "Arn"
     ]
    },
    "AutoPrepare": true,
    "Description": "Bedrock Agent powered by Amazon Nova Pro model - Development",
    "FoundationModel": "apac.amazon.nova-pro-v1:0",
    "Instruction": "You are a helpful AI assistant powered by Amazon Nova Pro. \n      You can help users with various tasks including:\n      - Answering questions and providing information\n      - Performing calculations\n      - Providing current time information\n      - General conversation and assistance\n      \n      Be helpful, accurate, and professional in your responses.\n      If you're unsure about something, say so rather than guessing.",
    "PromptOverrideConfiguration": {
     "PromptConfigurations": [
      {
       "BasePromptTemplate": "You are a helpful AI assistant. Process the user's request and determine the appropriate action to take.\n            \n            Available actions:\n            - get_current_time: Get the current date and time\n            - calculate: Perform mathematical calculations (add, subtract, multiply, divide)\n            \n            User request: $question$\n            \n            Please analyze the request and respond appropriately.",
       "PromptCreationMode": "DEFAULT",
       "PromptState": "ENABLED",
       "PromptType": "PRE_PROCESSING"
      }
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "BedrockAgentStack-Dev/BedrockAgent"
   }
  },
  "BedrockAgentAlias": {
   "Type": "AWS::Bedrock::AgentAlias",
   "Properties": {
    "AgentAliasName": "live",
    "AgentId": {
     "Fn::GetAtt": [
      "BedrockAgent",
      "AgentId"
     ]
    },
    "Description": "Live alias for the Nova Pro agent"
   },
   "Metadata": {
    "aws:cdk:path": "BedrockAgentStack-Dev/BedrockAgentAlias"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1WPzU7DMBCEn6X3zUJaxD2txLVReADk2Eu0jX+Q1y5Clt+dpEFQTvPNjFaj3WP73GK7U5/SaDM3lkcsr0npGZborcgByzHrmRKc3v0PbdIHy/rrL958BVYOyxAsrdWqFaxyo1FYXrLXiYNfm3vuKToWWVyFkUwMesay5N1E/jZ8g86yklrhlCUFN5CEHPW28sv/qj6GKxuKRyUEnQil5bOJ/QT3x+ecPnKq4IMhvMjDdf+EB3zcXYS5idkndoTDpt8uCEnOLwEAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "BedrockAgentStack-Dev/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "AgentId": {
   "Description": "Bedrock Agent ID",
   "Value": {
    "Fn::GetAtt": [
     "BedrockAgent",
     "AgentId"
    ]
   }
  },
  "AgentAliasId": {
   "Description": "Bedrock Agent Alias ID",
   "Value": {
    "Fn::GetAtt": [
     "BedrockAgentAlias",
     "AgentAliasId"
    ]
   }
  },
  "AgentArn": {
   "Description": "Bedrock Agent ARN",
   "Value": {
    "Fn::GetAtt": [
     "BedrockAgent",
     "AgentArn"
    ]
   }
  },
  "S3BucketName": {
   "Description": "S3 bucket for agent artifacts",
   "Value": {
    "Ref": "BedrockAgentBucket21B034A2"
   }
  },
  "LambdaFunctionName": {
   "Description": "Lambda function for agent actions",
   "Value": {
    "Ref": "AgentActionFunction45C8B7D6"
   }
  },
  "BedrockAgentRoleName": {
   "Description": "IAM role name for Bedrock Agent",
   "Value": {
    "Ref": "BedrockAgentRole7C982E0C"
   }
  },
  "BedrockAgentRoleArn": {
   "Description": "IAM role ARN for Bedrock Agent",
   "Value": {
    "Fn::GetAtt": [
     "BedrockAgentRole7C982E0C",
     "Arn"
    ]
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}